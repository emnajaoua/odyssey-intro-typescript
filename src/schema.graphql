"A particular intergalactic location available for booking"
type Listing {
    id : ID!
    title : String!
    "The listing's description"
    description: String!
    numOfBeds : Int
    costPerNight : Float
    closedForBookings : Boolean
    amenities: [Amenity!]!# What type should this be?
}

type Amenity {
    id: ID!
    "The amenity category the amenity belongs to"
    category: String!
    "The amenity's name"
    name: String!
}

type Query {
    "A curated array of listings to feature on the homepage"
    featuredListings: [Listing!]!
    "Returns the details about this listing"
    listing(id: ID!): Listing
}

type CreateListingResponse {
    "Similar to HTTP status code, represents the status of the mutation"
    code: Int!
    "Indicates whether the mutation was successful"
    success: Boolean!
    "Human-readable message for the UI"
    message: String!
    "The newly created listing"
    listing: Listing
}

input CreateListingInput {
    "The listing's title"
    title: String!
    "The listing's description"
    description: String!
    "The number of beds available"
    numOfBeds: Int!
    "The cost per night"
    costPerNight: Float!
    "Indicates whether listing is closed for bookings (on hiatus)"
    closedForBookings: Boolean
    "The Listing's amenities"
    amenities: [ID!]!
}

type Mutation {
    "Creates a new listing"
    createListing(input: CreateListingInput!): CreateListingResponse!
}